import type { Metadata } from 'next';
import { Geist, Geist_Mono } from 'next/font/google';
import {
  BlankExperienceContentType,
  initContentTypeRegistry,
} from '@optimizely/cms-sdk';
import { initReactComponentRegistry } from '@optimizely/cms-sdk/react/server';

import './globals.css';
import Header from '@/components/base/Header';
import Footer from '@/components/base/Footer';
import Jumbotron, { JumbotronContentType } from '@/components/Jumbotron';
import Teaser, { TeaserContentType } from '@/components/Teaser';
import Editorial, { EditorialContentType } from '@/components/Editorial';
import Contact, { ContactContentType } from '@/components/Contact';
import StartPage, { StartPageContentType } from '@/components/StartPage';
import Product, { ProductContentType } from '@/components/Product';
import StandardPage from '@/components/StandardPage';

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

initContentTypeRegistry([
  BlankExperienceContentType,
  StartPageContentType,
  JumbotronContentType,
  TeaserContentType,
  EditorialContentType,
  ContactContentType,
  ProductContentType,
]);

initReactComponentRegistry({
  resolver: {
    StartPage,
    Jumbotron,
    Teaser,
    Editorial,
    Contact,
    Product,
    StandardPage,
  },
});

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <Header />
        {children}
        <Footer />
      </body>
    </html>
  );
}
